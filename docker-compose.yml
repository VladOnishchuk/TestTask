version: '3.8'

services:
  backend:
    image: "retina_backend:latest"
    build:
      context: ./retina_help
    env_file: ./.env.prod
    volumes:
      - type: bind
        source: ./retina_help/binaries
        target: /home/app/web/binaries
      - .:/home/app/web/retina_help
      - image_analysis_volume:/home/app/web/task_results
      - media_volume:/home/app/web/media
    command: [ "sh","./start-server" ]

  web:
    image: "retina_app:latest"
    restart: always
    build:
      context: .
    env_file: ./.env.prod
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - .:/home/app/web
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
      - image_analysis_volume:/home/app/web/task_results
    command: [ "sh","./start.dev" ]

  redis:
    image: "redis:alpine"
    hostname: redis

  db:
    image: postgres:13.0-alpine
    env_file: ./.env.prod.db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  celery_worker:
    image: "retina_app:latest"
    env_file: ./.env.prod
    depends_on:
      - db
      - redis
    volumes:
      - .:/home/app/web
      - image_analysis_volume:/home/app/web/task_results
      - media_volume:/home/app/web/media
    command: [ "sh","./start-celery-worker" ]

  nginx:
    build: ./nginx
    env_file: ./.env.prod
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - static_volume:/home/app/web/staticfiles
      - image_analysis_volume:/home/app/web/task_results
      - media_volume:/home/app/web/media
    restart: always


volumes:
  nginx_conf:
  media_volume:
  postgres_data:
  static_volume:
  image_analysis_volume: